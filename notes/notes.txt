Travail dans Blender en Top Persp pour se rapprocher du référentiel OpenGL et avoir une idée des proportions
Modélisation de tous les assets dans le même référentiel pour avoir des tailles comparables
Globe : taille de 100
Placeholder personnage: taille de 1
Test en mode FPS dans Blender (Shift + F, clic gquche pour placer caméra) : courbure trop importante !
Globe de taille 500 : mieux mais courbure reste importante, et va être long à explorer pour le joueur
=> sauvé dans tests/scene1.blend

Second test : grille de taille 500, 50*50 divisions
Player de taille 2 (cone)
=> bonne base de départ, plutôt grand

On va plutôt utiliser un cercle ("flat earth")
Rayon de 300 semble OK en terme de taille et perspective
Loop cuts pour subdiviser ne marchent pas sur cercle => I + shift+R
(cf. http://blender.stackexchange.com/questions/27968/how-to-add-edge-loops-to-a-circle-triangle-fan)
Coloration avec matériaux basiques pour avoir des points de repère

Noter ce tuto pour terrain random (une autre fois !) :
https://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/How_to_Do_Procedural_Landscape_Modeling

Vraiment difficile de merger et couper les objets a posterio => prévoir dès leur modélisation
leur non-intersection (avec eux-même et leur plan support)

Vu au détour d'une exportation : le mode "smooth group" existe à l'exportation wavefront
=> à étudier plus tard

Script simple écrit pour exporter position, etc. objets visibles (permet de filter ce qui est exporté)
Alt+D crée une instance (data partagées)

Par principe j'ai appliqué (Ctrl + A) toutes les transformations aux meshes avant de les réexporter

Seule manière simple d'exploiter le résultat de dumpscene.py : "Copy to Clipboard (as script)", puis enlever préfixes...
Je ne sais pas comment obtenir les rotations en quaternion => exportation en euler XYZ

J'ai réécrit l'exportation en JSON, depuis un bloc de texte Blender, pour ne pas avoir à faire un parser

Beaucoup de mal avec glOrtho et HUD... Pour simplifier le debugging de la jauge :
 * extrudée pour voir quelque chose si elle est mal orientée
 * de taille raisonnable par défaut si exprimée en pixels (64)
 * rotation le long de X afin qu'elle soit dans le plan Y/Z (prise en compte de l'exportation wavefront "Y is up" par défaut de Blender)
 * near et far généreux au niveau de glOrtho
 * Shader "full white" de debugging